<?xml version="1.0" encoding="utf-8"?>
<!--
	Inversion of Control/Dependency Injection Using Robotlegs
	Image Gallery

	Any portion of this demonstration may be reused for any purpose where not
	licensed by another party restricting such use. Please leave the credits intact.

	Joel Hooks
	http://joelhooks.com
	joelhooks@gmail.com
-->
<s:Group
	xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	width="500" height="600"
	creationComplete="creationCompleteHandler(event)" xmlns:display="com.joelhooks.display.*" xmlns:components="robotlegs.bender.demos.imagegallery.view.api.*"
	implements="robotlegs.bender.demos.imagegallery.view.api.IGalleryView" xmlns:view="robotlegs.bender.demos.imagegallery.view.*">

	<s:layout>
		<s:BasicLayout/>
	</s:layout>

	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import robotlegs.bender.demos.imagegallery.view.events.GalleryImageEvent;

		private var _dataProvider:ArrayCollection;
		private var _imageSource:String;

		public function get imageSource():String
		{
			return _imageSource;
		}

		[Bindable]
		public function set imageSource(v:String):void
		{
			_imageSource = v;
		}

		public function get dataProvider():ArrayCollection
		{
			return _dataProvider;
		}

		[Bindable]
		public function set dataProvider(v:ArrayCollection):void
		{
			_dataProvider = v;
		}

		public function setThumbScrollPosition(position:int):void
		{
			this.dgThumbnails.horizontalScrollPosition = position;
		}

		public function creationCompleteHandler(event:FlexEvent):void
		{
			this.dgThumbnails.addEventListener(GalleryImageEvent.SELECT_GALLERY_IMAGE, handleSelectImage);
		}

		public function handleSelectImage(event:GalleryImageEvent):void
		{
			this.dispatchEvent(event);
		}
		]]>
	</fx:Script>
	<s:Group width="100%" height="100%">
		<s:Rect width="100%" height="100%">
			<s:fill>

				<s:LinearGradient rotation="90">
						<s:GradientEntry color="#333333"/>
						<s:GradientEntry color="#111111"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
	</s:Group>
	<s:Group width="100%"  height="100%">
		<s:layout>
			<s:VerticalLayout gap="0"/>
		</s:layout>

		<display:ImageSwap id="image" source="{imageSource}" width="100%" height="100%" />


		<s:DataGroup
			id="dgThumbnails"
			clipAndEnableScrolling="true" dataProvider="{this.dataProvider}"
			width="500"
			height="85" mouseEnabled="{!image.changingImages}" mouseChildren="{!image.changingImages}"
			itemRenderer="robotlegs.bender.demos.imagegallery.view.components.renderers.GalleryImageThumbnailItemRenderer">
			<s:layout>
				<s:HorizontalLayout gap="0"/>
			</s:layout>
		</s:DataGroup>
		<s:HScrollBar id="thumbScrollBar" viewport="{this.dgThumbnails}" width="500" smoothScrolling="true"/>
	</s:Group>
	<view:GalleryLabel id="galleryLabel" color="#FFFFFF" top="5" right="5" visible="false" includeInLayout="false" />
	<s:Label fontSize="9" text="all images Â© their owner" width="100%" textAlign="right" bottom="100" color="#FFFFFF" paddingRight="5"/>
</s:Group>
